一、是什么？
submodule子模块，简单来讲就是Git仓库中的子仓库。

想一想是不是遇到过这样的情况，有一个模块是通用的，需要被使用到多个项目；或者你的项目中要使用github上的一个开源模块。
这样的模块要怎么在你的项目中保持同步更新甚至是提交呢？答案就是submodule。

二、怎么用？

1. 新增submodule
git submodule add $giturl $foldername
其中$giturl表示git仓库地址，$foldername表示submodule的目录名，例如：

git submodule add git://github.com/xx/A.git A
注：下面示例全部以 A 当做submodule所在目录
完成后，将文件变化提交即可。



2. clone有submodule的git仓库的两种方式：
①、
git clone $giturl
git submodule init
git submodule update

②、
git clone --recursive $giturl（仓库地址）



3. submodule A作者有更新，如何同步到我的项目？
更新submodule A

 cd A
 git pull

回到主git仓库，查看状态，并提交
 cd ..
 git status

 //输出结果有这样的内容，意思是submodule A有修改。add并提交即可
 modified:   A (new commits)

 git add .
 git commit -m 'update submodule'
 git push



你的同事或者协作的开发者，如何更新？

 git pull
 git submodule update



这个些操作和status的内容一开始可能很难理解，这里要讲一下关于submodule的设计理念：
1、主git仓库中存在.gitmodules文件，它记录了submodule的基本信息。例如remote地址。
2、同时在某处记录了主git仓库所用的submodule的commit号。
3、主git仓库并不同步submodule中的所有代码，而是同步其remote地址和commit号，每个clone都是根据这两个信息自行到remote地址获取到该commit版本的内容。

所以，如果你要更新submodule必须做上面的操作步骤。而你操作完成后，你的git仓库中submodule的commit号得到更新。这样，与你协作的开发者，
就可以直接git pull得到最新的submodule commit号，git submodule update获取submodule该commit的代码。

4. 我是主git仓库的开发者，同时也是submodule A的作者，如何在主git仓库修改A并同步？
如果你理解了上面说的设计理念，那么这个操作非常简单。

修改A目录中的内容
提交并同步A

 cd A
 git add .
 git commit
 git push
此时，你就处于3.2的状态，按照3.2操作即可。

5. 几个submodule都想更到最新
有个简便操作

    git submodule foreach git pull
这样所有submodule都更到最新了，add commit即可。


三、删除Submodule

git 并不支持直接删除Submodule需要手动删除对应的文件:

1、cd 主项目文件夹

2、
git rm --cached A
rm -rf A
rm .gitmodules

更改git的配置文件config:
1、vim .git/config
可以看到Submodule的配置信息
[submodule "A"]
  url = git@github.com:jjz/A.git

2、删除submodule相关的内容,然后提交到远程服务器:
git commit -a -m 'remove A submodule'


原文链接：http://www.jianshu.com/p/384c73fe173f